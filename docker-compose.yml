services:
  mysql-master:
    image: mysql:8.0
    container_name: mysql-master
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: main_db
      MYSQL_USER: replica
      MYSQL_PASSWORD: replica_pass
    command: --server-id=1 --log-bin=mysql-bin --binlog-do-db=main_db
    volumes:
      - master_data:/var/lib/mysql
      - ./master.sql:/docker-entrypoint-initdb.d/master.sql
    networks:
      - backend


  mysql-replica1:
    image: mysql:8.0
    container_name: mysql-replica1
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    command: --server-id=2 --relay-log=relay-log --read-only=1
    depends_on:
      - mysql-master
    volumes:
      - replica1_data:/var/lib/mysql
    networks:
      - backend
  mysql-replica2:
    image: mysql:8.0
    container_name: mysql-replica2
    ports:
      - "3309:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    command: --server-id=3 --relay-log=relay-log --read-only=1
    depends_on:
      - mysql-master
    volumes:
      - replica2_data:/var/lib/mysql
    networks:
      - backend

  mysql-replica3:
    image: mysql:8.0
    container_name: mysql-replica3
    ports:
      - "3310:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    command: --server-id=4 --relay-log=relay-log --read-only=1
    depends_on:
      - mysql-master
    volumes:
      - replica3_data:/var/lib/mysql
    networks:
      - backend

  redis-server:
    image: redis:latest
    container_name: redis-server
    ports:
      - "6379:6379"

  redis-insight:
    image: redislabs/redisinsight:1.14.0
    container_name: redis-insight
    ports:
      - "8001:8001"
    depends_on:
      - redis-server

  mongo:
    image: mongo:7.0.5
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - backend

  data-loader:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      mongo:
        condition: service_started
    networks:
      - backend


volumes:
  master_data:
  replica1_data:
  replica2_data:
  replica3_data:
  mongo_data:


networks:
  backend:
    name: dbexam_backend
    driver: bridge
